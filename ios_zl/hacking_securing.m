otool -tV hello -p _main // 反汇编主函数
otool -L hello  // 列出二进制程序依赖的动态库
nm -arch arm hello      // 对二进制程序文件做符号表转储；改符号表展现了它所使用的符号、这些符号的数值以及类型。
strings hello   // 对二进制文件做字符串转储，（从二进制文件中寻找可以打印的字符串）
ldid -S launched    // 签名

[固态NAND存储芯片]又称为磁盘；被分为6个不同的块
-- BOOT // 第0块，包含apple的一份低级引导加载器。
-- PLOG // 第一块又叫可擦除存储，被设计成一个加密秘钥或其他需要快速清除或更新数据的存储锁；其中有三个非常重要的秘钥：BAGI/Dkey/EMF!，还存储了一个安全epoch，它会让用户试图进行iOS4固件降级操作时让设备变砖。
-- NVM  // 第2-7块用于存储设备设置的NVRAM参数。
-- FIRM // 第8-15块存储设备固件，包括iBoot(apple的第二阶段引导加载器)、设备树和logo。
-- FSYS // 第16-4084块为文件系统，存储操作系统和数据。
-- RSRV // 最后15个块保留。

NADN整个文件系统都使用同一个密钥加密（EMF!，当设备被清空或者恢复时，所有的密钥就被扔掉，然后重新创建新的，EMF!密钥还用于加密HFS卷），文件系统中的实际文件使用对应的密钥加密（文件被删除时，对应的密钥随之丢弃，理论上该文件的残留部分应该无法恢复）。

[保护类密钥]即用户密码（4S中是一个4位数字的PIN码），是用于基于文件的访问策略来解锁文件的主要加密密钥（一些重要文件需要在用户界面解锁后才可被解密）。这些文件加密密钥被封装成一个类密钥，这个类密钥只有在用户输入它的口令后才有效。保护类密钥会在设备每次解锁后生成，锁定后抹掉。

[keybag]这个文件包含了加密保护的类主密钥，其他的密钥保存在设备的系统文件中。keybag文件使用了一个叫做BAGI（保存在PLOG中）的密钥加密。每当用户进行认证并满足特定的安全保护策略时，加密在keybag中的密钥才会被解密。

[Dkey]街大多数文件都没有设置安全策略（NSFileProtectionNone），并且始终可用。这些文件的加密密钥被一个叫做Dkey（保存在PLOG中，因为被该密钥保护的密钥保护的文件按照策略是在设备启动后就可以访问，所以这个密钥其实可以从硬件相关的密钥推到出来，用于解密未被其他保护类保护的文件）的密钥加密。
注意：应用软件中没有被特别指定于保护分类加密的数据文件都会用Dkey加密，这个加密对设备商运行的进程来说是透明的。所以，通过自己在软件中实现自己的加密和自己的单独密码，可以更有效地加密数据。这样即使PIN码或设备密码被暴力破解后或被通过社会工程学刺探到后仍有效。






















